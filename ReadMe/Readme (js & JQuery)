

## Adding a submenu

A Submenu

Modern websites include interactive elements and animations, which improve the user experience and aesthetics.

Let's add a submenu to our responsive landing page that will open and close when tapping on the Download Now button.

Our submenu will be responsive as well -- it will appear over elements on desktop, and will push down the elements when on mobile.

We start by creating the submenu using HTML/CSS.
Our submenu will be a simple div element with links inside our header's container div:

<div class="submenu">
   <a href="#">Link 1</a>
   <a href="#">Link 2</a>
</div> 

.submenu {
    left: 50%;
    transform: translate(-50%, 0);
    text-align:center;
    position: absolute;
    background-color: #549DA0;
    min-width: 160px;
    border-radius: 5px;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
}
.submenu a {
    color: white;
    padding: 12px 16px;
    text-decoration: none;
    display: block;
}
.submenu a:hover {
    background-color: #468486;
}


We used a CSS hack in order to position our submenu in the center of the screen. The combination of absolute positioning, using the left and transform property, results in our submenu being positioned in the center of the screen and opened over the page elements.
We also used display: block; for our links, to make them behave as block-level elements.

Time to use CSS in our media query.
We need to make the submenu wider and push down the page, instead of opening it over the elements.

@media-->
  .submenu {
        width: 100%;
        position: relative;
    }

   ## Animation


    Let's use JavaScript to open/close the submenu when the button is tapped.
    Since we want to open the submenu using a nice sliding animation, we will use the JQuery library, which supports simple animations.
    
    We start by including jQuery in our page:
    <head>
      <title>App Landing Page</title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <script src="https://code.jquery.com/jquery-3.6.0.js"></script>
    </head> 

    We used the script tag to import the jQuery library.
#jQuery is a fast, small, and feature-rich JavaScript library.
It makes things like HTML document traversal and manipulation, event handling, and animation much simpler.
Learn more with our jQuery Tutorial.

We need to handle the click event of our button, which should open and close our submenu.

We will use the slideToggle() method, which switches between visible and invisible states of the element selected using a slide animation:

$(function() {
    $(".btn").click(function() {
        $(".submenu").slideToggle(500);
    });
}); 

In the code above, we handled the click event of out .btn, selected the .submenu element and opened/closed it using the slideToggle method, providing 500ms for the animation speed.

Now, the only thing left is to hide the submenu by default:

